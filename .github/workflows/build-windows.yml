name: Windows Build

#  build-win:
#    if: contains(github.event.head_commit.message, '[build]') # only run if commit message contains [build]
#    runs-on: windows-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python 3.9
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.9
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#        pip install pip-licenses
#        pip-licenses -f plain-vertical -l --no-license-path -u --from all >> LICENSE
#        pip install pyinstaller
#    - name: Build Windows
#      run: pyinstaller --onefile aimm.py --add-data 'LICENSE:.' --name aimm --distpath dist/
#    - name: Tests
#      if: contains(github.event.head_commit.message, '[tests]') # only run if commit message contains [build]
#      run: |
#        dist/aimm
#        dist/aimm init
#        dist/aimm add BSRGAN
#        dist/aimm list
#        dist/aimm remove BSRGAN
#        dist/aimm search GFPGAN
#    - name: Upload Release Windows
#      uses: actions/upload-artifact@v3
#      with:
#        name: Windows Binary
#        path: dist/aimm.exe

#  build-win-installer:
#    if: contains(github.event.head_commit.message, '[build]') # only run if commit message contains [build]
#    runs-on: windows-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python 3.9
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.9
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#        pip install pip-licenses
#        pip-licenses -f plain-vertical -l --no-license-path -u --from all >> LICENSE
#        pip install pynsist
#    - name: Build Windows-Installer
#      run: install/win-installer.bat
#    - name: Upload Release Windows-Installer
#      uses: actions/upload-artifact@v3
#      with:
#        name: Windows Installer
#        path: dist/win-installer/
#